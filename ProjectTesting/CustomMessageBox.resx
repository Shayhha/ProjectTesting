<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Error_picture.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1
        MAAA6mAAADqYAAAXcJy6UTwAABZOSURBVHhe7V1tcFzVeeYrwzBDGZpMGCaZSZlkJiSSsZ26gOSVbYQt
        ZFsyjk3ScUspHyZfQGjdlLYktNO0hBQKARKngZCkaWc8mf5o/tQDhgRkS7LsGn8EHNvYliVblrQrr2NM
        xyR4Bvv0ed5zzurq6u7ec3fv3V1J95155pGlu+e8533P8+79OPf4gtRSSy211FJLLbXUUksttdRSSy21
        1FJLLbWpb9nOlkuAK4Frsh0tjaMdmWagDegAVhnwZ/6umcfIsfozl5hmUpsqhqRdBSwDHkZCN4C3j3Zm
        +sEn8e938fP7YAVWZPxefjb8PhjHtJwE8zPbgQ2YFA+D2eZVppvU6sGQsIuQlGuQyNXgF4D9wHlAEpoA
        2PZ+TJAXpM8O9t1ykXEntWoZksDyvBZJ2AjOg89bRUdlfF5+LoPRZ0seTB/WAr9v3EstCUOAL0PCWsEo
        65kzYElGHeEMJsQG4+Nlxu3UKjUk+1IEdg2Cug3BPUv1eRVcKTN5/DlGho8t28DwOXOpGUZqUQ0BvCLb
        kbkDQeTJmAR4CqIfkwxjaLnCDCu1MIN6LkTS25D8nQjc+2AdzAQZJ3JJMsbQwrG0cWxmmKn5DQG6EMG6
        FsnnSdU5Sc70wjl8RWxERcAY04kwwRAQXs6tA7JUDlgUVC12VHI83JnJYhJwrOnlIw3B+CSC8ZIkY2bh
        JY7dhGHmGQLA5C8FhiUgUEit2Em5CTDODTj2pYCJygwxDBiXdpl/Ap+VJMxsnIUIGIuZccmIgV6O5P8I
        rG/ZUgk1ZlfFJsiIhcTkchOm6WkYIB/UdEvgU0wChNGNajA9Hzjh++4jGOTk5EMBtWYHhVaPMQng10dM
        2KaHYXBM/l4JeAoX7EUlmB6TADO6dNnHzK81Oymz2syvA8TOhHFqGgJ8OQaTfueXCVQBxu73TDinlsF5
        XurxzDZwcAVgxteaSyqx1tzZ8mNUg6l1iQinWfp5bZvk6pyZAl4iMpYmulPAoH7e3XK7yYOZXmt2UmJN
        OcNYLjXhrW+D07y3r2/vugKDrClPDQxjItT3swM4yad6L40ap53YNUkJcrgC64UzfGhWn08R4diFAB9z
        6sBGAQZXU55aWIeJUH/rCRBMLubI0kkn5Vt2TVKC7K7AumCuJ7jWhL0+DImk+rmSRwc1KjC4mvLUw0bG
        3IS/9gaH2oBzgQoPY9ckWf7iGpV7ZJ378Q7sqLySnPvGX4pvrsdXyOdQbdtM+GtrCOIVABc96oCWAwzK
        ib/0pyp/5IjK/+Y3KvfYIyq7YoHb58K4EsCH3Le+AZ9OqfzAEfEx8Lj4sRMCqv1qYzjCZc98p85N8X52
        TdKXb1f5A/tV/u3TKn/6HZXPZlXu23/v/vkS7KC4okwf6Av9Onn6tDoBH+mr6+cr4PfBd5g01MaQwEsR
        xMrX7WNQpTjH5A8OmCAj+Zahuty//EPllaAcUPnoO3/qlPjiRX5wUOW+8mfBn4sTHfLORO1uE2MC8I0d
        N6UX45DkMJD5gwfGle/nXE7lHv/H0HZKcYjSApl9sm89GeGLn+FzlpPAsb1yGTFcY9JRXcNJyGUIIF+B
        0oGsBBhMEOfuu0Pljx41QdVJD2SocOxfv1l+JYiCFQvV2BPfRJ9vS9+lQN9z9/95cDvxATnIVP9dRHTc
        Otop96hLKzyMiyQld/+dKn/ooCQ5UPl+HhtTuSf/uWh7pdhFaZbZB/tiv4HK9zPGkMVYXNsvg8+CW01a
        qmcIHjdf0EGsFBjMBL5zlcoPHTNB1El2Yqhy7DuPquytC4PbLcYuQJtjTz2KvsKV7wfHwjEFthsPNpi0
        VMfQ4ZVQ7xlUAHGgpMLDOCgpqxerE6++7KZ8P7MSPP1YcLtFOERhwrmnvxVN+R7mWDgml37K5DOjHZkr
        TXqSNwSOGyLoAMYBDGIS37ZEndj0PwiiTm40RiV45tvulaAUqHy0ZduOCo6BYwlsO16sNelJ1qD6iwDe
        ioSCdQBLKjyMSyRnFIEbevUVN+X7+cQJlXv28ZLtF/opoTC2wbbYrqviLdN3jqFU+3ExKgBvxSf/pBBJ
        4w5a3BpFBzAOYBB+Hl6eUa8vnKu6F9+gBl4stxKcVmPfeyK8EgSBysdnbVtRQZ/pO8cwvHx+cB/xgjm5
        xqQpOct2tKyG8rk/DhSsAxiobFcOSMoI8PrCOWpzc6PqampQ3UtuVEe3vOamfD+fyKux9U8G9mM5SFH8
        DD/LdlwVb5m+di++Eb7T/0aZBCOY0EH9xMjnUQVWmzQlZwgad+PSwYsLGISXh5Y1q62Z6yR4ehI0qp62
        JjX4i00Isk5uVB77t6eg6kWB/U0AjuGx9rNRQR/pK/224Fg4pkl9xQxMgB+ZNCVnUO1+Kp/qTfIcYHBp
        k+qVSdBQqAQ9bc3q2NYeN+X7OY9K8IOnA/vzKonH8Fh+zlXxlulbN3y0yic4Bo7F309CfMCkKRlDwPiS
        R/wrfeF8EB9d2owAzpJAFipB+3x1dPOrCLpOblQee+4ZlV3pqwQEfse/8bhyQJ/om1f59P1oFZTvAXOT
        3Msk2c7MMqq2GhXA8oBUAk4CTyVYmlFDO7a7Kd/P+ZNq7IffndAPFcTf8W88zlXxlulLT3tGJqhFz/xZ
        4rttv2rc2bLMpCt+Q+PcMlUHLk7A+VLMEsqAeitB77IWdax3C5KgkxuVx15YryvBypvw8/fk9+XgWG83
        fFkwQfn0Vco+x1B9PGzSFb+h8Q1UbTUrgOUj7TeaSTBeCXqXL1THd+90U76fT6IS/Pj7Av7M37sq3jL7
        pg9+5dNX+u2k2JgZJ4LJ3BZGErjrNjdP1omJE3DehQfaAypB5yI1tL0PSdHJLYfLAftk337lS9mnz7UD
        cxT/Ludo9Eoovp+qrUUFsNx/y+RKsHVFqxp+81duyg9gV8VbZl+9na0yAS264RN9o58uSk2Q+4H4nwsg
        +LwDyG3UdULiBJyPwgOFr4PxSrD11pvV8Z07kCSbVHeOAvbBviYpH9VJfKw9kKNM/HcE0XAjFM+99KFc
        zDbD7DRQ2a7smHQ/H77lBlHdhErw2SVqZN+vnZVv2VX5bHvryiUy4bzKpy/0y1GhSTNz1GjSFp+h4WYE
        XhZ/xg44Xw73oxLoSeCpBKvb1PCe3UiaTW44u4Bt9qFtr/LZt5zw0af6AXPUbNIWn6HRNq/yLbPTCYqO
        yo7JLsaHAipB323tavTgW7FVALbVt7pdJpjFFvTJvumHozKryAm8M5DtaOmQwCcBOF0JH8bJl78S9H1+
        mRrZ+4aoVyezOJcC22BbfuXLCR99qENgAnSYtMVnaHhVPVYAywfbbhBVeivBtj/uUNn+w2VXAH6WbUxQ
        fvMs6Yv9uiuy2pxZZdIWn+HMcpUEPAnA6Tj4ECcBEmQrwbY1K1T2SD+SqdVcjIuBn2Ubm9meST77kD7r
        GMlMAHwFyAyTDjwMVMpx4q2265GoRrX9T25VI/t/bZJpS30Q60pQjNkG22KbbBtC0H0x2HXKiXwFjHRk
        2qWTJOCocFfuv3eNyg7wTSImsrjywyqABduSNtnHFMDI8ky7SVt8NtDetAwzSzoQ5VoGKuU4wRcx8ofe
        MskrpXzLpSuAZbZZeMmDfdUpM0fMlUlbfLZv8R+t5FIt6Shu+BRcLsvLJMf4PgETF658y65g27kH7tR9
        1imYI+bKpC0+233TZ247bhY3inIty6yrjONA7oG7VP7wIZMsF+VbdqsAltkH+5KAs+86Yy5A3YNcmbTF
        Z9sWzF5xLKnVLSHKDuPcg3er/PEhZ8X7OSrYF/sUH+oMzNG2ltkrTNris+75je32Uaco1zJQKVeC3IP3
        qDyu13VyXBQ/zry3b58d8HdRmH2ybwk8fakT5kOpLfNnxX8S2NXUsOBg2/XJ/G9ejkr3c+4v1qr88LCz
        0r0sT/U+u0RgnyJGBfumD+JTneBg2w3nNjc1LjBpi8+6mhrn7L153nvsRJRrGaiUy0Fu3RdkSxadDDfF
        Wx7Z+6baunKx2mzuGvJn/s5F+X6mD7l19+oE0LcaM3PU1dwwx6QtPkOgPrFz0dy3paO44ah4y5L8kREn
        pfv5+I7thef5csfQQNYT4G88LiroS+6vvqh9rDGYI+bKpC0+Q6NX9cyfNcRZJspFZ2HKduUoyH3tS7Jd
        jA6+m+ItD7+xR1YPWeWPM8BKwJVFOMZF+X6mT7mvmUlAX2vCGdWTmTXEXJm0xWdo9FJgdyLr3EMUbzn3
        119W+VFuyMTAByu8GOs1fDeNKx/Me/uErQIEj7FrDKOCvtFH8bkGYG66mhv3bG5uiH/fIASM2HhgyfVa
        uegwTNmu7ILcQ19R+aODJthuirc8vGeXTr5H+VvmN+KE6XoB7/Pr32vmYk9+xkX5fqaP9FWSQt+ryMwN
        xrCRuUrE0PhjOxfO1Z3GiTDl/819ZkMmBjpY4cV4qK9X9Xbo1bte5dvFHGyfP0+qBPjMsb4eaScq8tmc
        +CxjqCKYG+bIpCt+Q/Bu54uOE+4IApVyKeT+9n6VP3bUBNdN8ZaP73xd1u1PVL59nm/6YPDAsp6Ax8hx
        muW9A7Thonw/02f6bttPmnkHUF6oRY5MuuI3NP5JBoYrcKTjuFBM+X/3gNmWhYENVngx5ltD9o0dr/Lt
        As4J/Rnwb5MqAdo41qPfQIqKfG4MY/jqhD6SAnMikxc5MumK39D4RUB+z02fkU5dFR7GQcg9/KBsrqSD
        6aZ4y3xXj6+OeZXPZVyymMPfFwPoYR7TzUkgn5OASlv2XUT2EYU5Bo7F30/czJzA3zxzZNKVjKGTnzOY
        sT4Z9Cvyns+VrXxuztCzFMlH4rzKty9tBPbnA4+VSeCpBGyTbbOfqGAlyN7z+cC+4gBzYdZE/tykKTnr
        amp4AF8F8p3pqvAwngRu0vBf/6lOFrZkc1Q+Lt/45vAk5UvZD+iHYBAD2K421u3oicQ3gIe2b3VSvmXZ
        sApjkRdRS/RXCTMXxs+vmjQlZ+hoFnBmx4I5SGCwgiIjSJmcBD99HpMAgXRRftcvC+/nW+VTxSWVb7kI
        AisB9yd47RfSbyhOnZYxFPYjSADMAXPBnGDcs0yakjN0dBmwi9fR8joUZqGr0otxMQyvWKAO//vznm1Z
        g5XPnTkk+T7l6xO+4LYLYCBLsH0DSberJ1bPLdyppLu08uEzfecYXPopl+Xpn/ZtFypzdbaMRUePMBi7
        FumTwYoRoMyhZfPV9gWz1ebMbLVv/VMS0CDlD/7yZUkIE1NQPhJmX9Eu1v4EDgHbkklgqgDBPtm3nogT
        QV/3rf+O+M4xJLk/EHNgfHrEpCd5Q5A/LYoAuADBVenF2A9e00ryraJxfXvgh+sRWLs1u1F+z2a9IZNH
        +XxRUy5TA9oNBAPpwPblE92PHjv7pg8TlX9KHXjh+5J8exzHIvdOHPqJwoy9UT/7+bRJT3UMnXZzcLsx
        A+2LHmXDp0g7AayihTEJ9j37RKESDL7youpeonfj8iqfbw4XVXoxdgTLrb8S0IeBl18cVz58pK+FY+DX
        9pbZse8VyJgz9uwD4+82aame4WpgLa8GGBC9C1a40otxEApfAeijoPD516n9P3hWDeIkjHsH+pWvT/iC
        2ysKBjQCsw/2pfvVCaYvg6+9og48993x5Ju/T/gKcGjflRlzW5GYC5OW6hmS/2Ggnw7sWDhHO1Yuiigz
        sBJw0JgIhX+DtfI5CYPbCeWIYF8yCdi/BRPv/R38ou/c8TSojUrAV/IYc9MPctDwYZOW6hk6Jh7lQOGA
        fEe6Kt7PpRBYCfzKl7If/PlQMKhlME8M/ZXAy1r5puw7tBeFC7d92V9Tw6OAyUqVDU5cBfwfnemDAuxD
        osgIUaiuBHMmVgIwE1CR8i2XCS6SnVQJ4Bd9TUL5BGPMWJv+GPvk9gV0MTjwJN/E5cDfaP1DBNVd+ZZd
        cBxq+l99wwMD18rXl3rBxzuDga2A/ZWAPtJX189HZcZY+tJxeNKkoXYGNX4Mzgxbp6Qc09kocFQqVcUA
        9+AcwG6/6vK5UK4Qeh/D68S3xN6eAngCqhMvYMw/ZtJQO8P3P6vA1+kYK0FfCzdG1te8cVYAC5ZAbiEb
        9LeywODGwPSp8BXocHxUHrKl30wAnIB/HeIzWaixwSmuFzwozgHc6j3Sc4JiyqwW1zkYS9k+Xyuf50CM
        de3+v8AgQyVYjQpwlhOgC1cFe2+epycBZm+cFSB2MMh1zIwhYyni0hPgLOKc/P8LENXg2MWYmT+xVYC3
        KLlIUQYSBr8iq811DMawcLtXqx8xbrjYhL2+DI5djeSP2qsCOs6z5LQClMeMHdcwSvL1JGBsrzbhrk/D
        yclyOPuuOAzoyzWcsXNgxeCq1KS4DhFwt/FdqH+5CXP9GpJ+MfA4k28rAQfCs+S0ArgxY1VIvlY+mTGt
        z9LvNzjMSbBJnDfoxYDkrh0H6oerUpPiOgJjxFgZ1Qug/E2orFMj+dag/j/AOcF+Jt9bCYLOCWoKBr5O
        uHBX0aN8JH8/Y2nCOrUME+BaDCQngzHgCt1JVweuSk2Ka46Megsx8a81ABi7a004p6ZhAG1dzQ2nmHxb
        CQjvfYKaggmoIdvrfM/KHsuMWfx7/tbCMJDFwDsyOA94d0svlQpRaNJcI3Ds3jt8HryD0r/YhG96GBK+
        ChXgNBNvKwGZzw7KWskTF5iMGjDH7L23X+CmRsYo/q1e68GQ8IUY3AkZrBcYOB9zjj9McVRuXFxFcIyF
        R7rjihdA9SfAC024pqdhEjTjnOAIA2ArAZ/vk6kI78qiqoCJqQLzu55jK6jeToBxRkwa4v+PHurRMAE+
        igH3AucZAMx8CYRlrnfjM3Y5SZQAJswJgpOZY5E1fDbZXiAGGDdj8VETnplhGPAHMRGe00GZWAnIvCTi
        smfZnJJKSgpMVEJM3zkGu3rXJNzPzyEOHzRhmXmGINwFBYwyIP5KQObl0a5Fc+UOWWIVIUbQR/rKN3a8
        T/EmQT80u8uEYeYaAsEHSJ8CdwdVAst8F5FLrrhnP/8vflFZHGDiYmAuBeN+Q3xRUxJvkx/IDd34vueY
        TRRS40T4ACbCveBsUCXwMksqN0Tgi5vyxk0xZbtymWDfPLGjLwF38YKQlTE2NX7ADDs1vyHBn4A6eG5w
        rlRFEAa4Lw43R+Lt5bLWCjKZzpyRPtjXTnwtsW/tj/alBJ8DY0wN8W/gOF0NwZqHwP03Ave7sIrgZT5M
        4d21N3GtzZLM72OejHFFMct04H9UZcA3bngMlc3P8LNs483WeWhz7viDGnf8DsAYGuaZYaUWxZDUS4BW
        BJATIbwiFOFunD9QrbzryJc2+D3NhLJyUMn8mZdp/Ftfy2zVi2MLZ+7STmQ+h1LPxLfi5/j/I+eZaAjm
        p3DW/AwCOgSlB94/KItjAhJ+HjwEPIt2q/uq9kwyBPhqBPh2JHATFP4eExlWAcIZKJ/fQztcsEGf6nu9
        3nQzBPxDAO8jbAAPgGVCiLJdOSok4Y0DwAYk/i5Upg8Zd1KrlSEpMhnwFTGvq7nhPiSFy9N349+/ZaKL
        K9+pAvwWx+0G/wSMthvnAZh4NXojNzV3Q6IuQWn+ONAK3I2EPoTfPQHlPw/+D/DP8Lufgfnz8wD/9hAm
        zt34O04+Gz/ONkxzqaWWWmqppZZaaqmlNh3sggv+Hz19BPoU/TBRAAAAAElFTkSuQmCC
</value>
  </data>
</root>